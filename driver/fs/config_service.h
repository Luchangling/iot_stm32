
#ifndef __CONFIG_SERVICE_H__
#define __CONFIG_SERVICE_H__

#include "kk_type.h"
#include "kk_error_code.h"
//#include "socket_service.h"
//#include "socket.h"
#include "gps.h"
#include "applied_math.h"
//Е▐▒Е╦┐Г┴┬Д©╝Ф■╧Х©≥Д╦╙Ф∙╟

#define VERSION_NUMBER  "1.3.0"

#define KK_DNS_MAX_LENTH 50
#define APN_DEFAULT "CMNET"
#define APN_USER_DEFAULT ""
#define APN_PWD_DEFAULT ""
#define KK_IMEI_DEFAULT "866717048888889"
#define UPDATE_DEVICE_CODE "SYS"
#define UPDATE_BOOT_CODE "boot"
#define CONFIG_DEFAULT_MAIN_ADDR       "webbo.yunjiwulian.com:10003"
#define CONFIG_LOG_SERVER_ADDERSS      "yj03.yunjiwulian.com:10009"
//#define CONFIG_LOG_SERVER_ADDERSS      "firmwarelog.gpsorg.net:39998"

#define CONFIG_LOG_SERVER_IP           "47.106.251.151"
#define KK_UPDATE_SERVER_DNS        "yj03.yunjiwulian.com:10008"
#define KK_UPDATE_SERVER_IP         "47.106.251.151"

#define CFG_CUSTOM_CODE  "FOTA"
#define CFG_SYSTEM_MODEL "SYS"
#define CFG_EXTSYS_MODEL "EXT"

#define CONFIG_MAX_CELL_NUM_LEN    17
#define CONFIG_CMD_MAX_LEN         10
#define CONFIG_STRING_MAX_LEN      100

#define CONFIG_UPLOAD_TIME_MAX     10800ul
#define CONFIG_UPLOAD_TIME_DEFAULT 10 
#define CONFIG_UPLOAD_TIME_MIN     0 
#define CONFIG_SPEEDTHR_MAX        180
#define CONFIG_SPEEDTHR_MIN        5
#define CONFIG_STATIC_TIME_MAX     500
#define CONFIG_ACCTHR_MAX          2.0f
#define CONFIG_ACCTHR_MIN          0.1f
#define CONFIG_BRAKETHR_MAX        3.0f
#define CONFIG_BRAKETHR_MIN        0.5f
#define CONFIG_CRASHLTHR_MAX       6.0f
#define CONFIG_CRASHLTHR_MIN       1.0f
#define CONFIG_CRASHMTHR_MAX       8.0f
#define CONFIG_CRASHMTHR_MIN       4.0f
#define CONFIG_CRASHHTHR_MAX       15.0f
#define CONFIG_CRASHHTHR_MIN       8.0f
#define CONFIG_TURNTHR_MAX         5.0f
#define CONFIG_TURNTHR_MIN         0.1f
#define CONFIG_STATICTHR_MAX       1.0f
#define CONFIG_STATICTHR_MIN       0.0f
#define CONFIG_RUNTHR_MAX          1.0f
#define CONFIG_RUNTHR_MIN          0.0f
#define CONFIG_QUAKETHR_MAX        1.0f
#define CONFIG_QUAKETHR_MIN        0.0f
#define CONFIG_LOW_VOLTHR_MAX      15.0f
#define CONFIG_LOW_VOLTHR_MIN      0.0f
#define KK_HEARTBEAT_MAX        360ul
#define KK_HEARTBEAT_DEFAULT    180ul
#define KK_HEARTBEAT_MIN        3
#define KK_SLEEPTIME_MAX        30
#define KK_SLEEPTIME_DEFAULT    5
#define KK_SLEEPTIME_MIN        0
#define CONFIG_ANGLETIME_MAX       0xFF
#define CONFIG_ANGLETIME_DEFAULT   10
#define CONFIG_ANGLETIME_MIN       0
#define CONFIG_SHAKECOUT_MAX       100
#define CONFIG_SHAKECOUT_DEFAULT   5
#define CONFIG_SHAKECOUT_MIN       1
#define CONFIG_AUTODEFDELAY_MAX       1200
#define CONFIG_AUTODEFDELAY_DEFAULT   300
#define CONFIG_AUTODEFDELAY_MIN       1
#define CONFIG_SHAKEALARMDELAY_MAX       1200
#define CONFIG_SHAKEALARMDELAY_DEFAULT   30
#define CONFIG_SHAKEALARMDELAY_MIN       1
#define CONFIG_SHAKEALARMINTERVAL_MAX       3600
#define CONFIG_SHAKEALARMINTERVAL_DEFAULT   1800
#define CONFIG_SHAKEALARMINTERVAL_MIN       1
#define CONFIG_MAX_DNS_LEN 50
#define CONFIG_MAX_APN_LEN 30
#define CONFIG_MAX_APN_USR_LEN 30
#define CONFIG_MAX_APN_PSW_LEN 30

#define KK_MAPS_URL_DEFAULT "http://ditu.google.cn/maps?q="
//И┐╗Ф═┤Е▌┌Е∙├Ф═┤Е©≈.    Е░▌И²╒Е▐╞И─ Х©┤Е▐┌Ф∙╟И┘█Г╫╝Ф²╔Д©╝Ф■?
#define LOW_VOLTAGE_ALARM_PERCENT 0.8
#define MAX_JT_AUTH_CODE_LEN 100
#define MAX_JT_OEM_ID_LEN 5
#define JT_DEFAULT_CELL_NUM "20191111001"
#define JT_OEM_ID "11111"  
#define MAX_JT_DEV_ID_LEN 7
#define JT_DEV_ID "9887125"
#define MAX_JT_VEHICLE_NUMBER_LEN 12
#define JT_VEHICLE_NUMBER "таB 99988"
#define GB_ATTYPE_STANDARD     0x00   //Ф═┤Е┤├
#define GB_ATTYPE_CUSTOM       0x01   //Х║╔Е┘┘
#define LBS_UPLOAD_DEFAULT 60
#define GPS_NOT_FIXED_DEFAULT 60

/* Socket Type */
typedef enum
{
    STREAM_TYPE_STREAM = 0,      /* stream socket, TCP */
    STREAM_TYPE_DGRAM = 1,       /* datagram socket, UDP */
    STREAM_TYPE_SMS = 2,         /* SMS bearer */
    STREAM_TYPE_RAW = 3,         /* raw socket */
} StreamType;


typedef enum
{
    MAGIC_CRC,
    //Д╦╨Е┘╪Е╝╧Г └Е▌÷Е⌡═, Х©≥Д╨⌡И┘█Г╫╝Х╕│Х©·Е°╗Д╦─Х╣?BEGIN
    CFG_SERVERADDR,           // Д╦╩Ф°█Е┼║Е≥╗Е°╟Е²─,xxx.xxx.xxx.xxx:port      = 0
    CFG_UPLOADTIME,           // Д╦┼Д╪═gpsИ≈╢И ■
    CFG_SPEEDTHR,             // Х╤┘И─÷И≤─Е─?
    CFG_PROTOCOL,             // ConfigProtocolEnum


    CFG_HEART_INTERVAL,      // = 40

    CFG_APN_NAME,   //80
    CFG_APN_USER,
    CFG_APN_PWD,
	
    //Ф≈╤Е▄╨[TYPE_BYTE]
    CFG_TIME_ZONE,

    //И┐╗Ф═┤ Ф≤╞Е░╕Е╥╡ФЁ╗Е├?Е▐╙Е°╗Х╝╬Е╓┤Е╪─Г■╣Е░▌ФЁ╗Е├▄Д╦─Ф╛?Ф■╧Х╝╬Е╓┤Е▐╥Е┬≥Х╕│И┤█Ф√╟ФЁ╗Е├▄
    CFG_JT_ISREGISTERED,
    // И┐╗Ф═┤Е█▐Х╝╝Г╠╩Е·▀
    CFG_JT_AT_TYPE, 
    // Г╩┬Г╚╞ID
    CFG_JT_DEVICE_ID,
    // Х╫╕Г┴▄Е▐╥Г═│
    CFG_JT_VEHICLE_NUMBER,
    // Х╫╕Г┴▄И╒°Х┴╡
    CFG_JT_VEHICLE_COLOR,
    // Е▌┌Е∙├ID
    CFG_JT_OEM_ID,
    // Г°│Е÷÷ID
    CFG_JT_PROVINCE,
    // Е╦┌Е÷÷ID
    CFG_JT_CITY,
    //И╙▄Х╞│Г═?
    CFG_JT_AUTH_CODE, // 110

    CFG_JT_CEL_NUM,

    CFG_JT_HBINTERVAL, ////Д╪▒Г°═Ф≈╤Д╦┼Ф┼╔И≈╢И ■

    CFG_IS_STATIC_UPLOAD,
    
    CFG_TURN_ANGLE,
    
    CFG_SPEED_ALARM_ENABLE,
    
    CFG_SPEED_CHECK_TIME,

    //Е╫⌠Е┴█Ф≤╞Е░╕Ф╣▀Х╞∙Ф╗║Е╪▐
    CFG_IS_TEST_MODE,

    CFG_LOGSERVERADDR,

    CFG_UPDATESERVERADDR,

    CFG_UPDATEFILESERVER,

    CFG_RELAY_STATE,

    CFG_AGPS_EN,

    CFG_PARAM_MAX
}ConfigParamEnum;

typedef enum
{
    TYPE_NONE = 0x00,
    TYPE_INT = 0x01,
    TYPE_SHORT = 0x02,
    TYPE_STRING = 0x03,
    TYPE_BOOL = 0X04,
    TYPE_FLOAT = 0X05,
    TYPE_BYTE = 0x06,
    TYPE_ARRY = 0x07,
    TYPE_MAX
}ConfigParamDataType;

typedef enum
{
    CFG_CMD_REQ = 0x13,
    CFG_CMD_ACK = 0x92,
    CFG_CMD_RESULT = 0x14,
    CFG_CMD_MAX
}ConfigCmdEnum;

typedef enum
{
    CFG_CMD_REQ_ALL = 0x00,
    CFG_CMD_REQ_ONCE = 0x01,
    CFG_CMD_REQ_PERMANENT= 0x02,
}ConfigCmdReqType;

typedef enum
{
    HEART_SMART = 0x00,  //0x03 or 0x07
    HEART_NORMAL = 0x01,  //0x03
    HEART_EXPAND = 0x02,  //0x07
    HEART_MAX
}ConfigHearUploadEnum;


typedef struct
{
    ConfigParamDataType type;
    u16 len;
    
} ConfigParamItems;


typedef enum
{
    PROTOCOL_NONE = 0x00,
    PROTOCOL_JT808 = 0x01,
    PROTOCOL_MAX
}ConfigProtocolEnum;





//Ф√╜Г■╣Ф┼╔Х╜╕Ф√╧Е╪▐ 00: Е▐╙GPRSФ√╧Е╪▐ 01:SMS+GPRS  10: GPRS+SMS+CALL 11:GPRS+CALL И╩≤Х╝╓:01
typedef enum
{
    PWRALM_GPRS = 0,
    PWRALM_GPRS_SMS = 1,
    PWRALM_GPRS_SMS_CALL = 2,
    PWRALM_GPRS_CALL = 3,
}PowerAlarmMode;

/**
 * Function:   Е┬⌡Е╩╨config_serviceФ╗║Е²≈
 * Description:Е┬⌡Е╩╨config_serviceФ╗║Е²≈
 * Input:	   
 * Output:	   
 * Return:	   KK_SUCCESSБ─■Б─■Ф┬░Е┼÷О╪⌡Е┘╤Е╝┐И■≥Х╞╞Г═│Б─■Б─■Е╓╠Х╢?
 * Others:	   Д╫©Г■╗Е┴█Е©┘И║╩Х╟┐Г■?Е░╕Е┬≥Х╟┐Г■╗Е┘╤Е╝┐Ф▌╔Е▐ёХ©■Е⌡·Е╓╠Х╢╔И■≥Х╞╞Г═?
 */
KK_ERRCODE config_service_create(void);

/**
 * Function:   И■─Ф╞│config_serviceФ╗║Е²≈
 * Description:И■─Ф╞│config_serviceФ╗║Е²≈
 * Input:	   
 * Output:	   
 * Return:	   KK_SUCCESSБ─■Б─■Ф┬░Е┼÷О╪⌡Е┘╤Е╝┐И■≥Х╞╞Г═│Б─■Б─■Е╓╠Х╢?
 * Others:	   
 */
KK_ERRCODE config_service_destroy(void);


/**
 * Function:   
 * Description: Х▌╥Е▐√Ф▄┤Е╝ idЕ╞╧Е╨■Г └И┘█Г╫?
 * Input:	   id:И┘█Г╫╝id    type:Ф∙╟Ф█╝Г╠╩Е·▀
 * Output:	   
 * Return:	   Ф∙╟Ф█╝И∙©Е╨╕
 * Others:	   Х╞╔Е┤╫Ф∙╟Е▐╙Ф°┴Е╜≈Г╛╕Д╦╡Г╠╩Е·▀Г └И┘█Г╫? Д╦█Г÷╔И│⌠И∙©Е╨╕И┤▄, И°─Х╕│Е┘┬Х╟┐Г■╗Д╩╔Х▌╥Г÷╔И∙©Е╨?
 */
u16 config_service_get_length(ConfigParamEnum id, ConfigParamDataType type);

/**
 * Function:   
 * Description: Ф═╧Ф█╝idД╦▌type Х▌╥Е▐√И┘█Г╫╝Е┬╟bufД╦?
 * Input:	   id:И┘█Г╫╝id    type:Ф∙╟Ф█╝Г╠╩Е·▀      buf:Х╬⌠Е┤╨,Г■╗Ф²╔Е╜≤Е┌╗И┘█Г╫╝Ф∙╟Ф█╝            len:bufИ∙©Е╨╕
 * Output:	   
 * Return:	   
 * Others:	   
 */
KK_ERRCODE config_service_get(ConfigParamEnum id, ConfigParamDataType type, void* buf, u16 len);

/**
 * Function:   
 * Description: Ф═╧Ф█╝idД╦▌type Ф┼?bufД╦╜Г └Е├┘Е╝╧ Х╝╬Г╫╝Е┬╟config_serviceФ╗║Е²≈
 * Input:	   id:И┘█Г╫╝id    type:Ф∙╟Ф█╝Г╠╩Е·▀      buf:Г■╗Ф²╔Е╜≤Е┌╗И┘█Г╫╝Ф∙╟Ф█╝            len:bufИ∙©Е╨╕
 * Output:	   
 * Return:	   
 * Others:	   
 */
void config_service_set(ConfigParamEnum id, ConfigParamDataType type, const void* buf, u16 len);

/**
 * Function:   
 * Description: Ф╜╓Е┤╫Ф∙╟Е▐╞Д╩ёФ⌡©config_service_get, Г┴╧Е┬╚Ф≤╞stringГ╠╩Е·▀, Д╪ Е╟▒Ф▌┴Е╜≈Г╛╕Д╦╡Ф▀╥Х╢²Г └Ф≈╤И≈?
 * Input:	   id:И┘█Г╫╝id 
 * Output:	  
 * Return:	   Ф▄┤Е░▒idЕ╞╧Е╨■И┘█Г╫╝
 * Others:	  
 */
void* config_service_get_pointer(ConfigParamEnum id);

    
/**
 * Function:   
 * Description: Х▌╥Е▐√Е╫⌠Е┴█Е█▐Х╝╝И┘█Г╫╝
 * Input:	   
 * Output:	   
 * Return:	   Е╫⌠Е┴█Е█▐Х╝╝
 * Others:	  
 */
ConfigProtocolEnum config_service_get_app_protocol(void);

/**
 * Function:   
 * Description: Х▌╥Е▐√Е╫⌠Е┴█Е©┐Х╥ЁЕ█▐Х╝╝И┘█Г╫╝
 * Input:	   
 * Output:	   
 * Return:	   Е©┐Х╥ЁЕ█▐Х╝╝
 * Others:	  
 */
ConfigHearUploadEnum config_service_get_heartbeat_protocol(void);

/**
 * Function:   
 * Description: Х▌╥Е▐√Е╫⌠Е┴█Ф≈╤Е▄╨И┘█Г╫╝
 * Input:	   
 * Output:	   
 * Return:	  
 * Others:	   
 */
s8 config_service_get_zone(void);


/**
 * Function:   
 * Description: Г■╗Д╫∙Г╖█Е©┐Х╥ЁЕ█▐Х╝?
 * Input:	   
 * Output:	   
 * Return:	   Е©┐Х╥ЁЕ█▐Х╝╝
 * Others:	   
 */
bool config_service_is_main_server_goome(void);



/**
 * Function:   
 * Description: Е▒┼Х╜╕Е▐╙Е▐▒И─│Г╩≥Д╦─Д╦╙Е▐╥
 * Input:	   
 * Output:	  
 * Return:	   Е©┐Х╥ЁЕ█▐Х╝╝
 * Others:	  
 */
bool config_service_is_alarm_sms_to_one(void);

/**
 * Function:   
 * Description: Х▌╥Е▐√Г÷╜Д©║Е▐▒И─│Е▐╥Г═?
 * Input:	   
 * Output:	   
 * Return:	   Е▐╥Г═│И∙©Е╨╕
 * Others:	  
 */
u8 config_service_get_sos_number(u8 index, u8 *buf, u16 len);



/**
 * Function:   
 * Description: Ф≤╞Е░╕Е░╞Г■╗agps, Е╕┌Ф·°Д╦█Ф≤╞, Х║╗Г╓╨Е░╞Г■╗epo
 * Input:	   
 * Output:	  
 * Return:	   1 apgs    0 epo
 * Others:	  
 */
bool config_service_is_agps(void);



/**
 * Function:   
 * Description: Х▌╥Е▐√Е╫⌠Е┴█gpsГ╠╩Е·▀
 * Input:	  
 * Output:	  
 * Return:	   Ф≈╤Е▄╨
 * Others:	   
 */
GPSChipType config_service_get_gps_type(void);



/**
 * Function:   
 * Description: Д╩▌Ф°╛Е°╟И┘█Г╫╝Ф√┤Д╩╤Д╦╜Х▌╥Е▐√И┘█Г╫╝Д©║Ф│╞
 * Input:	   configsЕ┬≈Х║╗Ф▄┤И▓┬
 * Output:	   configsЕ┬≈Х║╗Ф▄┤И▓┬
 * Return:	   KK_SUCCESS Ф┬░Е┼÷, Е┘╤Е╝┐Е╓╠Х╢╔
 * Others:	  
 */
KK_ERRCODE config_service_read_from_local(void);

/**
 * Function:   
 * Description: Д©²Е╜≤И┘█Г╫╝Е┬╟Ф°╛Е°╟Ф√┤Д╩╤Д╦╜
 * Input:	   configsЕ┬≈Х║╗Ф▄┤И▓┬
 * Output:	   
 * Return:	   KK_SUCCESS Ф┬░Е┼÷, Е┘╤Е╝┐Е╓╠Х╢╔
 * Others:	  
 */
KK_ERRCODE config_service_save_to_local(void);

/**
 * Function:   Ф═╧Ф█╝IDХ▌╥Е▐√Х╝╬Е╓┤Е·▀Е▐╥
 * Description:Х▌╥Е▐√Х╝╬Е╓┤Е·▀Е▐╥(Е╜≈Г╛╕Д╦?
 * Input:	   Х╝╬Е╓┤Е·▀Е▐╥
 * Output:	   
 * Return:	   Х╝╬Е╓┤Е·▀Е▐╥(Е╜≈Г╛╕
 * Others:	   
 */
const char * config_service_get_device_type(u16 index);


/**
 * Function:   
 * Description: Ф│╒Е╓█Е┤╨Е▌┌Х╝╬Г╫╝
 * Input:	   configsЕ┬≈Х║╗Ф▄┤И▓┬     is_all(Ф≤╞Д╦█Ф≤╞Е▄┘Ф▀╛ipЕ°╟Е²─Х╝╬Г╫╝)
 * Output:	   configsЕ┬≈Х║╗Ф▄┤И▓┬
 * Return:	   KK_SUCCESS Ф┬░Е┼÷, Е┘╤Е╝┐Е╓╠Х╢╔
 * Others:	 
 */
void config_service_restore_factory_config(bool is_all);

/**
 * Function:   
 * Description: Х╝╬Г╫╝Ф╣▀Х╞∙Ф╗║Е╪▐
 * Input:	   state:trueБ─■Б─■Х©⌡Е┘╔Ф╣▀Х╞∙Ф╗║Е╪?falseБ─■Б─■И──Е┤╨Ф╣▀Х╞∙Ф╗║Е╪?
 * Output:	   
 * Return:	  
 * Others:	   
 */
void config_service_set_test_mode(bool state);


/**
 * Function:   
 * Description: Е┬╓Ф√╜Е╫⌠Е┴█Ф≤╞Д╦█Ф≤╞Ф╣▀Х╞∙Ф╗║Е╪?
 * Input:	  
 * Output:	  
 * Return:	   true Ф╣▀Х╞∙Ф╗║Е╪▐ , false И²·Ф╣▀Х╞∙Ф╗║Е╪?
 * Others:	 
 */
bool config_service_is_test_mode(void);

/**
 * Function:   
 * Description: Е┬╓Ф√╜Е╫⌠Е┴█Г └imeiФ≤╞Е░╕Е├≥Ф╜╩Е°╗Д╩ёГ═│Д╦╜Г └И╩≤Х╝╓imei
 * Input:	   
 * Output:	   
 * Return:	   true KK_IMEI_DEFAULT , false И²?KK_IMEI_DEFAULT
 * Others:	
 */
bool config_service_is_default_imei(void);

/**
 * Function:   
 * Description: Х╝╬Г╫╝Х╝╬Е╓┤Г └simЕ▐?
 * Input:	   sim
 * Output:	   KK_SUCCESS Ф┬░Е┼÷, Е┘╤Е╝┐Е╓╠Х╢╔
 * Return:	   
 * Others:	  
 */
KK_ERRCODE config_service_set_device_sim(u8 *pdata);


/**
 * Function:   
 * Description: Ф■╧Е▐≤ipЕ°╟Е²─
 * Input:	   idx:И┘█Г╫╝id,Е┘╤Е─╪Ф≤╞(xxx.xxx.xxx.xxx:port)Е╫╒Е╪▐;   buf: dns  ;len: dnsИ∙©Е╨╕
 * Output:	   
 * Return:	   
 * Others:	   
 */
void config_service_change_ip(ConfigParamEnum idx, u8 *buf, u16 len);

/**
 * Function:   
 * Description: Ф■╧Е▐≤port
 * Input:	   idx:И┘█Г╫╝id,Е┘╤Е─╪Ф≤╞(xxx.xxx.xxx.xxx:port)Е╫╒Е╪▐;   port
 * Output:	 
 * Return:	  
 * Others:	   Ф
 */
void config_service_change_port(ConfigParamEnum idx, u16 port);


/*
    
*/
/**
 * Function:   
 * Description: Е█┤Г╨╖Д╫©Г■╗Г └socketГ╠╩Е·▀
 * Input:     
 * Output:     
 * Return:     Е█┤Г╨╖Д╫©Г■╗Г └socketГ╠╩Е·▀
 * Others:    
 */
StreamType config_service_update_socket_type(void);

StreamType config_service_agps_socket_type(void);

KK_ERRCODE config_service_save_to_local(void);

KK_ERRCODE config_service_read_from_fs(void);

#endif


